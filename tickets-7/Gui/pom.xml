<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<!-- inherited pom -->
	<parent>
		<groupId>tfa</groupId>
		<version>0.0.1-SNAPSHOT</version>
		<artifactId>tickets</artifactId>
	</parent>

	<!-- identifier for this module -->
	<artifactId>tickets-gui</artifactId>

	<!-- packaging for java webapp -->
	<packaging>war</packaging>

	<description>
      	An application managing tickets - GUI Layer, build on JSF
    </description>

	<properties>
		
		<!-- webjars resources versions for filtering -->	
		<font-awesome.version>4.7.0</font-awesome.version>
		
		<webappdir>${basedir}/src/main/webapp</webappdir>
		
	</properties>

	<dependencies>

		<!-- Module dependency : software layer below -->
		<dependency>
			<groupId>tfa</groupId>
			<artifactId>tickets-face</artifactId>
			<version>${project.version}</version>
		</dependency>
		
        <dependency>
            <groupId>tfa</groupId>
            <artifactId>tickets-rest</artifactId>
            <version>${project.version}</version>
        </dependency>

	</dependencies>

	<build>

		<!-- Context root ( http://localhost:8080/tickets ) -->
		<finalName>/tickets</finalName>

		<plugins>

			<!-- Less to css -->
			<plugin>
				<groupId>org.lesscss</groupId>
				<artifactId>lesscss-maven-plugin</artifactId>
				<version>1.7.0.1.1</version>
                <executions>
                    <execution>
                        <id>to-webapp</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>${basedir}/src/main/less</sourceDirectory>
                            <outputDirectory>${webappdir}/resources/css</outputDirectory>
                            <compress>true</compress>
                        </configuration>
                    </execution>
                    <execution>
                        <id>wtp-workaround</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>${basedir}/src/main/less</sourceDirectory>
                            <outputDirectory>${project.build.directory}/m2e-wtp/web-resources/resources/css</outputDirectory>
                            <compress>false</compress>
                        </configuration>
                    </execution>
                </executions>
			</plugin>

			<!-- filtering : dependencies for dev or production -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<webResources>
						<resource>
							<filtering>true</filtering>
							<directory>${webappdir}</directory>
							<includes>
								<include>resources/webjars.xhtml</include>
							</includes>
						</resource>
						<resource>
							<filtering>false</filtering>
							<directory>${webappdir}</directory>
							<excludes>
								<exclude>resources/webjars.xhtml</exclude>
							</excludes>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.5.0</version>
				<configuration>
					<!-- deploy the war on my raspberry.pi using PuTTy scp -->
					<executable>C:\Progra~2\PuTTY\pscp.exe</executable>
					<arguments>
						<argument>-i</argument>
						<argument>C:\Progra~2\PuTTY\pi3.ppk</argument>
						<argument>${project.build.directory}\${project.build.finalName}.war </argument>
						<argument>root@raspberry.pi:/opt/jetty9/tickets/webapps/tickets.war</argument>
					</arguments>
				</configuration>
				<executions>
					<execution>
						<phase>deploy</phase>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

	<profiles>
		<profile>

			<id>embed</id>

			<!-- To build executable war with embedded jetty server -->

			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>

			<dependencies>

				<!-- The jetty to embed into war -->
				<dependency>
					<groupId>tfa</groupId>
					<artifactId>tickets-jetty</artifactId>
					<version>${project.version}</version>
					<classifier>jar-with-dependencies</classifier>
					<scope>provided</scope>
				</dependency>

			</dependencies>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<webResources>
                                <!-- filtering : webjars dependencies -->
								<resource>
									<filtering>true</filtering>
									<directory>${webappdir}</directory>
									<includes>
										<include>resources/webjars.xhtml</include>
									</includes>
								</resource>
								<resource>
									<filtering>false</filtering>
									<directory>${webappdir}</directory>
									<excludes>
										<exclude>resources/webjars.xhtml</exclude>
									</excludes>
								</resource>
							</webResources>
							<archive>
								<manifest>
									<!-- The entry point -->
									<mainClass>tfa.tickets.main.JettyMain</mainClass>
								</manifest>
							</archive>
							<overlays>
								<!-- Embed jetty module ... -->
								<overlay>
									<groupId>tfa</groupId>
									<artifactId>tickets-jetty</artifactId>
									<classifier>jar-with-dependencies</classifier>
									<type>jar</type>
								</overlay>
							</overlays>
							<!-- add suffix .exec.war -->
							<classifier>exec</classifier>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>war</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			
		</profile>
	</profiles>

</project>
